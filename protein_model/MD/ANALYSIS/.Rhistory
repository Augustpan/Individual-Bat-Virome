source("~/Desktop/ITS/analyze.R")
source("~/Desktop/ITS/analyze.R")
View(asv_table)
View(asv_table)
asv_table$sample_name
str_split(asv_table$sample_name, "_")
str_split(asv_table$sample_name, "_", simplify = T)
str_split(asv_table$sample_name, "_", simplify = T)[,2]
str_split(asv_table$sample_name, "_", simplify = T)[,2] %>%
str_ends("TS")
str_starts(treatment, "CK")
treatment = str_split(asv_table$sample_name, "_", simplify = T)[,2]
str_starts(treatment, "CK")
library(tidyverse)
asv_table = read_csv("asv_table_filtered.csv")
treatment = str_split(asv_table$sample_name, "_", simplify = T)[,2]
ts = str_ends(treatment, "TS")
nn = str_ends(treatment, "NN")
td = str_ends(treatment, "TD")
ss = str_ends(treatment, "SS")
sd = str_ends(treatment, "SD")
ck = str_starts(treatment, "CK")
trt = rep("", nrow(asv_table))
trt[ts] = "TS"
trt[nn] = "NN"
trt[td] = "TD"
trt[ss] = "SS"
trt[sd] = "SD"
trt[ck] = "CK"
asv_table = mutate(asv_table, treatment=trt, .before=2)
asv_table
treatment
source("~/Desktop/ITS/analyze.R")
View(asv_table)
View(asv_table)
source("~/Desktop/ITS/analyze.R")
asv_table
select(asv_table, starts_with("ASV"))
select(asv_table, starts_with("ASV")) %>%
specnumber()
select(asv_table, starts_with("ASV")) %>%
diversity("shannon")
richness = select(asv_table, starts_with("ASV")) %>%
specnumber()
shannon = select(asv_table, starts_with("ASV")) %>%
diversity("shannon")
richness
source("~/Desktop/ITS/analyze.R")
select(asv_table, 1:2) %>%
mutate(richness = richness, shannon = shannon)
select(asv_table, 1:3) %>%
mutate(richness = richness, shannon = shannon)
qplot(x=origin, y=richness)
div_table = select(asv_table, 1:3) %>%
mutate(richness = richness, shannon = shannon)
qplot(x=origin, y=richness, data=div_table)
qplot(x=origin, y=richness, data=div_table) + geom_boxplot(stat="identity")
qplot(x=origin, y=richness, data=div_table) + geom_boxplot(stat="mean")
qplot(x=origin, y=richness, data=div_table, geom="boxplot")
origin = factor(asb_table$origin, levels=c("CK", "A", "U"), ordered=T)
origin = factor(asv_table$origin, levels=c("CK", "A", "U"), ordered=T)
origin
origin = factor(asv_table$origin, levels=c("CK", "A", "U"), ordered=T)
asv_table$origin = origin
div_table = select(asv_table, 1:3) %>%
mutate(richness = richness, shannon = shannon)
qplot(x=origin, y=richness, data=div_table, geom="boxplot")
qplot(x=origin, y=richness, data=filter(div_table, treatment=="NN"), geom="boxplot")
qplot(x=origin, y=richness, data=filter(div_table, treatment %in% c("NN", "CK")), geom="boxplot")
library(ggsci)
library(ggpubr)
qplot(x=origin, y=richness, data=filter(div_table, treatment %in% c("NN", "CK")), geom="boxplot") +
stat_compare_means(method="t.test")
qplot(x=origin, y=richness, data=filter(div_table, treatment %in% c("NN", "CK")), geom="boxplot") +
stat_compare_means(method="wilcox")
p2 = qplot(x=origin, y=shannon, data=filter(div_table, treatment %in% c("NN", "CK")), geom="boxplot") +
stat_compare_means(method="wilcox")
ggsave("fungi_richness.jpg", plot=p2, width=5, height=5)
p2
qplot(x=origin, y=shannon, data=filter(div_table, treatment %in% c("NN", "CK")), geom="boxplot") +
stat_compare_means()
source("~/Desktop/ITS/analyze.R")
read_csv("exported-rep-seqs/blast_tophit.csv")
tax_table = read_csv("exported-rep-seqs/blast_tophit.csv")
colnames(asv_table)
asv_ids = colnames(asv_table)[4:ncol(asv_table)]
asv_ids
tax_table
filter(tax_table, asv_id %in% asv_ids)
tax_table %>%
filter(asv_id %in% asv_ids) %>%
filter(subphylum == "Glomeromycotina")
amf = tax_table %>%
filter(asv_id %in% asv_ids) %>%
filter(subphylum == "Glomeromycotina")
amf_ids = amd$asv_id
amf = tax_table %>%
filter(asv_id %in% asv_ids) %>%
filter(subphylum == "Glomeromycotina")
amf_ids = amf$asv_id
amd_ids
amf_ids
select(asv_table, 1:3)
select(asv_table, 1:3, all_of(amf_ids))
asv_table_amf = select(asv_table, 1:3, all_of(amf_ids))
asv_table_amf = select(asv_table, 1:3, all_of(amf_ids))
asv_table_amf = select(asv_table, 1:3, all_of(amf_ids))
richness = select(asv_table_amf, starts_with("ASV")) %>%
specnumber()
shannon = select(asv_table_amf, starts_with("ASV")) %>%
diversity("shannon")
origin = factor(asv_table_amf$origin, levels=c("CK", "A", "U"), ordered=T)
asv_table_amf$origin = origin
div_table = select(asv_table_amf, 1:3) %>%
mutate(richness = richness, shannon = shannon)
qplot(x=origin, y=richness, data=filter(div_table, treatment %in% c("NN", "CK")), geom="boxplot") +
stat_compare_means()
View(asv_table)
read_delim(clipboard())
dat = read_delim(clipboard())
dat
asv_Table
asv_table
mutate(asv_table, sample_id=str_split(sample_name, "_", simplify = T)[,2])
mutate(asv_table, sample_id=str_split(sample_name, "_", simplify = T)[,2], .before=2)
mutate(asv_table, sample_id=str_split(sample_name, "_", simplify = T)[,2], .before=2) %>%
left_join(dat)
merged_table = mutate(asv_table, sample_id=str_split(sample_name, "_", simplify = T)[,2], .before=2) %>%
left_join(dat)
dat
comm_matrix = select(merged_table, starts_with("ASV"))
metadata = select(merged_table, 1:4, all_of(colnames(dat)))
comm_matrix
metadata
mutate(asv_table, sample_id=str_split(sample_name, "_", simplify = T)[,2], .before=2) %>%
left_join(dat) %>%
filter(treatment =="NN" | treatment=="CK")
merged_table = mutate(asv_table, sample_id=str_split(sample_name, "_", simplify = T)[,2], .before=2) %>%
left_join(dat) %>%
filter(treatment =="NN" | treatment=="CK")
comm_matrix = select(merged_table, starts_with("ASV"))
metadata = select(merged_table, 1:4, all_of(colnames(dat)))
metadata
decorana(comm_matrix)
decostand(comm_matrix, method="helinger")
decostand(comm_matrix, method="hellinger")
metadata
comm_matrix_hel = decostand(comm_matrix, method="hellinger")
rda(comm_matrix_hel ~ Nmining + soilCN + DOC + MCN, data=metadata)
rda(comm_matrix_hel ~ Nmining + soilCN + DOC + MCN, data=metadata) %>% plot()
rda_fit = rda(comm_matrix_hel ~ Nmining + soilCN + DOC + MCN, data=metadata)
anova(rda_fit)
anova(rda_fit, by="term")
anova(rda_fit, by="margin")
rda_fit$CA$u
rda_fit$CCA$u
metadata
metadata$treatment
site_score = rda_fit$CCA$u
qplot(x=site_score[,1], y=site_score[,2], color=metadata$treatment)
qplot(x=site_score[,1], y=site_score[,2], color=metadata$treatment)
qplot(x=site_score[,1], y=site_score[,2], color=metadata$sample_id)
qplot(x=site_score[,1], y=site_score[,2], color=metadata$origin)
qplot(x=site_score[,1], y=site_score[,2], color=metadata$origin, size=10)
qplot(x=site_score[,1], y=site_score[,2], color=metadata$origin, size=10) +
geom_point(aes(x=biplot[,1], y=biplot[,2]))
qplot(x=site_score[,1], y=site_score[,2], color=metadata$origin, size=10)
plot(rda_fit)
rda(comm_matrix_hel
)
rda(comm_matrix_hel) %>% plot()
asb
asv_table
filter(asv_table, treatment="CK")
filter(asv_table, treatment=="CK")
filter(asv_table, treatment=="CK") %>%
group_by(treatment) %>%
summarise(across(starts_with("ASV"), mean))
ck_mean = filter(asv_table, treatment=="CK") %>%
group_by(treatment) %>%
summarise(across(starts_with("ASV"), mean)) %>%
select(-treatment)
filter(asv_table, origin=="A", treatment=="NN")
ck_mean = filter(asv_table, treatment=="CK") %>%
group_by(treatment) %>%
summarise(across(starts_with("ASV"), mean)) %>%
select(-treatment)
ar = filter(asv_table, origin=="A", treatment=="NN") %>% select(starts_with("ASV"))
us = filter(asv_table, origin=="U", treatment=="NN") %>% select(starts_with("ASV"))
vegdist(ck_mean, ar[1,])
ar[1,]
vegdist(rbind(ck_mean, ar[1,]), method="bray")
vegdist(rbind(ck_mean, ar), method="bray")
vegdist(rbind(ck_mean, us), method="bray")
vegdist(rbind(ck_mean, us), method="bray")[,1]
vegdist(rbind(ck_mean, us), method="bray") %>% as.matrix()[,1]
vegdist(rbind(ck_mean, us), method="bray") %>% as.matrix()
as.matrix(vegdist(rbind(ck_mean, us), method="bray"))[2:6,1]
as.matrix(vegdist(rbind(ck_mean, ar), method="bray"))[2:6,1]
as.matrix(vegdist(rbind(ck_mean, us), method="bray"))[2:6,1]
diff_df = tibble(c(ar_diff, us_diff), c(rep("A", 5), rep("U", 5)))
diff_df
ck_mean = filter(asv_table, treatment=="CK") %>%
group_by(treatment) %>%
summarise(across(starts_with("ASV"), mean)) %>%
select(-treatment)
ar = filter(asv_table, origin=="A", treatment=="NN") %>% select(starts_with("ASV"))
us = filter(asv_table, origin=="U", treatment=="NN") %>% select(starts_with("ASV"))
ar_diff = as.matrix(vegdist(rbind(ck_mean, ar), method="bray"))[2:6,1]
us_diff = as.matrix(vegdist(rbind(ck_mean, us), method="bray"))[2:6,1]
diff_df = tibble(c(ar_diff, us_diff), c(rep("A", 5), rep("U", 5)))
diff_df
diff_df = tibble(diff=c(ar_diff, us_diff), origin=c(rep("A", 5), rep("U", 5)))
diff_df
read_delim(clipboard())
psf = read_delim(clipboard())
psf
diff_df = tibble(diff=c(ar_diff, us_diff), origin=c(rep("A", 5), rep("U", 5)),total_psf=psf$total_PSF, plantN_PSF=psf$plantN_PSF)
diff_df
qplot(x= diff, y=total_psf, color=origin) + geom_smooth(method="lm")
qplot(x= diff, y=total_psf, color=origin, data=diff_df) + geom_smooth(method="lm")
qplot(x= diff, y=plantN_psf, color=origin, data=diff_df) + geom_smooth(method="lm")
qplot(x= diff, y=plantN_PSF, color=origin, data=diff_df) + geom_smooth(method="lm")
rda(comm_matrix_hel, data=metadata)
rda_hel = rda(comm_matrix_hel, data=metadata)
rda_hel
plot(rda_hel)
rda_hel$CA$u
qplot(x=st[,1], y=st[,2], color=metadata$origin, size=10)
st = rda_hel$CA$u
qplot(x=st[,1], y=st[,2], color=metadata$origin, size=10)
metadata
merged_table
comm_matrix = merged_table %>%
filter(treatment != "CK") %>%
select(starts_with("ASV"))
metadata = merged_table %>%
filter(treatment != "CK") %>%
select(1:4, all_of(colnames(dat)))
comm_matrix
comm_matrix_hel = decostand(comm_matrix, method="hellinger")
comm_matrix_hel
rda_hel = rda(comm_matrix_hel)
rda_hel
st = rda_hel$CA$u
qplot(x=st[,1], y=st[,2], color=metadata$origin, size=10)
diff_df
qplot(x=st[,1], y=diff_df$total_psf, color=diff_df$origin)
qplot(x=st[,1], y=diff_df$total_psf, color=diff_df$origin, size=10)
qplot(x=st[,1], y=diff_df$total_psf, color=diff_df$origin, size=10) + geom_smooth(method="lm")
qplot(x=st[,2], y=diff_df$total_psf, color=diff_df$origin, size=10) + geom_smooth(method="lm")
rda(comm_matrix_hel ~ diff_df$total_psf + diff_df$plantN_PSF)
fit = rda(comm_matrix_hel ~ diff_df$total_psf + diff_df$plantN_PSF)
anova(fit)
qplot(x= diff, y=plantN_psf, color=origin, data=diff_df) + geom_smooth(method="lm")
qplot(x= diff, y=plantN_PSF, size=10, color=origin, data=diff_df) + geom_smooth(method="lm")
qplot(x= diff, y=total_PSF, size=10, color=origin, data=diff_df) + geom_smooth(method="lm")
qplot(x= diff, y=total_psf, size=10, color=origin, data=diff_df) + geom_smooth(method="lm")
qplot(x= diff, y=total_PSF, size=10, color=origin, data=diff_df) + geom_smooth(method="lm")
qplot(x= diff, y=total_psf, size=10, color=origin, data=diff_df) + geom_smooth(method="lm")
qplot(x= diff, y=plantN_PSF, size=10, color=origin, data=diff_df) + geom_smooth(method="lm")
lm(plantN_PSF ~ diff * origin, data=diff_df)
lm(plantN_PSF ~ diff * origin, data=diff_df) %>% anova()
lm(plantN_PSF ~ diff * origin, data=diff_df) %>% summary()
plant_trait = read_delim(clipboard())
plant_trait
plant_trait %>% group_by("sample_id")
plant_trait %>% group_by(sample_id) %>% summarise(acorss(total:branchiness), mean)
plant_trait %>% group_by(sample_id) %>% summarise(acorss(total:branchiness, mean))
plant_trait %>% group_by(sample_id) %>% summarise(across(total:branchiness, mean))
traits_summ = plant_trait %>% group_by(sample_id) %>% summarise(across(total:branchiness, mean))
cbind(traits_summ, diff_df)
df = cbind(traits_summ, diff_df)
select(df, total, SLA, branchiness, diff)
select(df, total, SLA, branchiness, diff) %>% rda()
select(df, total, SLA, branchiness, diff) %>% scale() %>% rda()
select(df, total, SLA, branchiness, diff) %>% scale() %>% rda() %>% plot()
f = select(df, total, SLA, branchiness, diff) %>% scale() %>% rda()
st = f$CA$u
qplot(x=st[,1],y=st[,2],color=df$origin)
qplot(x=st[,1],y=st[,2],color=df$origin, size=10)
select(df, total, SLA, branchiness, diff) %>% scale() %>% rda() %>% plot()
sp = f$CA$v
qplot(x=st[,1],y=st[,2],color=df$origin) + geom_point(aes(x=sp[,1],y=sp[,2]))
ggplot() + geom_point(aes(x=st[,1],y=st[,2],color=df$origin)) + geom_point(aes(x=sp[,1],y=sp[,2]))
ggplot() + geom_point(aes(x=st[,1],y=st[,2],color=df$origin), size=10) + geom_point(aes(x=sp[,1],y=sp[,2]))
ggplot() + geom_point(aes(x=st[,1],y=st[,2],color=df$origin), size=6) + geom_point(aes(x=sp[,1],y=sp[,2]))
sp
ggplot() + geom_point(aes(x=st[,1],y=st[,2],color=df$origin), size=6) + geom_point(aes(x=sp[,1],y=sp[,2])) + geom_label(aes(x=sp[,1], y=sp[,2], label=rownames(sp)))
View(dat)
df
cbind(df, dat[,2:5])
cbind(df, dat[1:10,2:5])
df = cbind(df, dat[1:10,2:5])
f = select(df, total, SLA, branchiness, diff, Nmining ,soilCN,DOC,MCN) %>% scale() %>% rda()
sp = f$CA$v
st = f$CA$u
ggplot() + geom_point(aes(x=st[,1],y=st[,2],color=df$origin), size=6) + geom_point(aes(x=sp[,1],y=sp[,2])) + geom_label(aes(x=sp[,1], y=sp[,2], label=rownames(sp)))
setwd("~/Documents/GitHub/Bat_Infectome/protein_model/SARS_MD/ANALYSIS")
str_split("SARS-CoV-2.1-ANALYSIS/foldx_be.csv", "-ANALYSIS/")
str_split("SARS-CoV-2.1-ANALYSIS/foldx_be.csv", "-ANALYSIS/", simplify = T)
str_split("SARS-CoV-2.1-ANALYSIS/foldx_be.csv", "-ANALYSIS/", simplify = T)[1]
library(tidyverse)
library(cowplot)
be_files = c(
"SARS-CoV-2.1-ANALYSIS/foldx_be.csv",
"SARS-CoV-2.2-ANALYSIS/foldx_be.csv",
"SARS-CoV-2.3-ANALYSIS/foldx_be.csv",
"Mod1-ANALYSIS/foldx_be.csv",
"Mod2-ANALYSIS/foldx_be.csv",
"Mod3-ANALYSIS/foldx_be.csv"
)
be_all = NULL
for (filename in be_files) {
mod = str_split(filename, "-ANALYSIS/", simplify = T)[1]
be = read_tsv(filename) %>%
mutate(model=mod, frame=0:(n()-1), time=frame/10, .before=1)
be_all = rbind(be_all, be)
}
be_all
rmsd_all = NULL
for (filename in be_files) {
mod = str_split(filename, "-ANALYSIS/", simplify = T)[1]
rmsd = read_tsv(filename) %>%
mutate(frame=time, time = time/10) %>%
mutate(model=mod, frame=0:(n()-1), time=frame/10, .before=1)
rmsd_all = rbind(rmsd_all, rmsd)
}
rmsd_all = NULL
for (filename in be_files) {
mod = str_split(filename, "-ANALYSIS/", simplify = T)[1]
rmsd = read_tsv(filename) %>%
mutate(time = time/10) %>%
mutate(model=mod, frame=time*10, .before=1)
rmsd_all = rbind(rmsd_all, rmsd)
}
rmsd_all
rmsd_all = NULL
for (filename in rmsd_files) {
mod = str_split(filename, "-ANALYSIS/", simplify = T)[1]
rmsd = read_tsv(filename) %>%
mutate(time = time/10) %>%
mutate(model=mod, frame=time*10, .before=1)
rmsd_all = rbind(rmsd_all, rmsd)
}
rmsd_files = c(
"SARS-CoV-2.1-ANALYSIS/RMSD.csv",
"SARS-CoV-2.2-ANALYSIS/RMSD.csv",
"SARS-CoV-2.3-ANALYSIS/RMSD.csv",
"Mod1-ANALYSIS/RMSD.csv",
"Mod2-ANALYSIS/RMSD.csv",
"Mod3-ANALYSIS/RMSD.csv"
)
rmsd_all = NULL
for (filename in rmsd_files) {
mod = str_split(filename, "-ANALYSIS/", simplify = T)[1]
rmsd = read_tsv(filename) %>%
mutate(time = time/10) %>%
mutate(model=mod, frame=time*10, .before=1)
rmsd_all = rbind(rmsd_all, rmsd)
}
rmsd
rmsd_all = NULL
for (filename in rmsd_files) {
mod = str_split(filename, "-ANALYSIS/", simplify = T)[1]
rmsd = read_tsv(filename) %>%
mutate(time = time/10) %>%
mutate(model=mod, frame=time*10, .before=1)
rmsd_all = rbind(rmsd_all, rmsd)
}
mod
rmsd
read_tsv(filename)
rmsd_all = NULL
for (filename in rmsd_files) {
mod = str_split(filename, "-ANALYSIS/", simplify = T)[1]
rmsd = read_csv(filename) %>%
mutate(time = time/10) %>%
mutate(model=mod, frame=time*10, .before=1)
rmsd_all = rbind(rmsd_all, rmsd)
}
rmsd_all
be_all
w = 5
h = 4
r = 3
linewidth = 0.3
g1 = ggplot(be_all, aes(x=time, y=BE, color=model)) +
geom_line(size=linewidth) +
scale_x_continuous(expand = c(0, 0), limits = c(0, NA)) +
xlab("Time [ns]") +
ylab("Binding energy\n[kcal/mol]") +
theme_bw() +
theme(legend.position="none")
g1
g2 = ggplot(foldx_be_long, aes(x=model, y=BE, fill=model)) +
geom_violin(draw_quantiles=c(0.25, 0.5, 0.75), size=linewidth) +
#geom_jitter(height = 0, width = 0.2, size=pt_size) +
xlab("") +
ylab("") +
theme_bw() + theme(legend.position="none")
g2 = ggplot(be_all, aes(x=model, y=BE, fill=model)) +
geom_violin(draw_quantiles=c(0.25, 0.5, 0.75), size=linewidth) +
#geom_jitter(height = 0, width = 0.2, size=pt_size) +
xlab("") +
ylab("") +
theme_bw() + theme(legend.position="none")
g2
be_all = NULL
for (filename in be_files) {
mod = str_split(filename, "-ANALYSIS/", simplify = T)[1]
be = read_tsv(filename) %>%
mutate(model=mod, frame=0:(n()-1), time=frame/10, .before=1)
be_all = rbind(be_all, be)
}
be_all$model = factor(be_all$model, levels=c("SARS-CoV-2.1","SARS-CoV-2.2","SARS-CoV-2.3", "Mod1", "Mod2", "Mod3"), ordered=T)
rmsd_all = NULL
for (filename in rmsd_files) {
mod = str_split(filename, "-ANALYSIS/", simplify = T)[1]
rmsd = read_csv(filename) %>%
mutate(time = time/10) %>%
mutate(model=mod, frame=time*10, .before=1)
rmsd_all = rbind(rmsd_all, rmsd)
}
rmsd$model = factor(rmsd$model, levels=c("SARS-CoV-2.1","SARS-CoV-2.2","SARS-CoV-2.3", "Mod1", "Mod2", "Mod3"), ordered=T)
w = 5
h = 4
r = 3
linewidth = 0.3
g1 = ggplot(be_all, aes(x=time, y=BE, color=model)) +
geom_line(size=linewidth) +
scale_x_continuous(expand = c(0, 0), limits = c(0, NA)) +
xlab("Time [ns]") +
ylab("Binding energy\n[kcal/mol]") +
theme_bw() +
theme(legend.position="none")
g2 = ggplot(be_all, aes(x=model, y=BE, fill=model)) +
geom_violin(draw_quantiles=c(0.25, 0.5, 0.75), size=linewidth) +
#geom_jitter(height = 0, width = 0.2, size=pt_size) +
xlab("") +
ylab("") +
theme_bw() + theme(legend.position="none")
p = plot_grid(g1, g2, rel_widths=c(r, 1))
p
plot_grid(g1, g2, rel_widths=c(2, 1))
g5 = ggplot(rmsd_all, aes(x=time, y=RMSD, color=model)) +
geom_line(size=linewidth) +
scale_x_continuous(expand = c(0, 0), limits = c(0, NA)) +
xlab("Time [ns]") +
ylab("RMSD [Å]") +
theme_bw() + theme(legend.position="none")
g6 = ggplot(rmsd_all, aes(x=model, y=RMSD, fill=model)) +
geom_violin(draw_quantiles=c(0.25, 0.5, 0.75), size=linewidth) +
#geom_jitter(height = 0, width = 0.2, size=pt_size, shape=1, alpha=0.1) +
xlab("") +
ylab("") +
theme_bw() + theme(legend.position="none")
p=plot_grid(g5,g6, nrow=1, ncol=2, rel_widths = c(2, 1))
rmsd_all
g1 = ggplot(rmsd_all, aes(x=time, y=RMSD_INTER, color=model)) +
geom_line(size=linewidth) +
scale_x_continuous(expand = c(0, 0), limits = c(0, NA)) +
xlab("Time [ns]") +
ylab("RMSD [Å]") +
theme_bw() + theme(legend.position="none")
g2 = ggplot(rmsd_all, aes(x=model, y=RMSD_INTER, fill=model)) +
geom_violin(draw_quantiles=c(0.25, 0.5, 0.75), size=linewidth) +
#geom_jitter(height = 0, width = 0.2, size=pt_size, shape=1, alpha=0.1) +
xlab("") +
ylab("") +
theme_bw() + theme(legend.position="none")
g3 = ggplot(rmsd_all, aes(x=time, y=RMSD_RBD, color=model)) +
geom_line(size=linewidth) +
scale_x_continuous(expand = c(0, 0), limits = c(0, NA)) +
xlab("Time [ns]") +
ylab("RMSD [Å]") +
theme_bw() + theme(legend.position="none")
g4 = ggplot(rmsd_all, aes(x=model, y=RMSD_RBD, fill=model)) +
geom_violin(draw_quantiles=c(0.25, 0.5, 0.75), size=linewidth) +
#geom_jitter(height = 0, width = 0.2, size=pt_size, shape=1, alpha=0.1) +
xlab("") +
ylab("") +
theme_bw() + theme(legend.position="none")
g5 = ggplot(rmsd_all, aes(x=time, y=RMSD_ACE, color=model)) +
geom_line(size=linewidth) +
scale_x_continuous(expand = c(0, 0), limits = c(0, NA)) +
xlab("Time [ns]") +
ylab("RMSD [Å]") +
theme_bw() + theme(legend.position="none")
g6 = ggplot(rmsd_all, aes(x=model, y=RMSD_ACE, fill=model)) +
geom_violin(draw_quantiles=c(0.25, 0.5, 0.75), size=linewidth) +
#geom_jitter(height = 0, width = 0.2, size=pt_size, shape=1, alpha=0.1) +
xlab("") +
ylab("") +
theme_bw() + theme(legend.position="none")
p=plot_grid(g1,g2,g3,g4,g5,g6, nrow=3, ncol=2, rel_widths = c(2, 1))
p
source("~/Documents/GitHub/Bat_Infectome/protein_model/SARS_MD/ANALYSIS/visualize.R")
p1
p2
source("~/Documents/GitHub/Bat_Infectome/protein_model/SARS_MD/ANALYSIS/visualize.R")
p1
p2
source("~/Documents/GitHub/Bat_Infectome/protein_model/SARS_MD/ANALYSIS/visualize.R")
🏃🏻‍♀️
p2
p1
plot_grid(p1,p2, nrow=2)
source("~/Documents/GitHub/Bat_Infectome/protein_model/SARS_MD/ANALYSIS/visualize.R")
source("~/Documents/GitHub/Bat_Infectome/protein_model/SARS_MD/ANALYSIS/visualize.R")
